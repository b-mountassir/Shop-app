.container  
  h5 
    - unless current_page?(controller: "seller/products", action:"new")
      | Edit product
    - else
      | Create new product
  = form_with(model: [:seller, @product]) do |form|
    - if @product.errors.any?
      #error_explanation
      h2 = pluralize(@product.errors.count, "error")
        | prohibited this product from being saved:

        ul
          - @product.errors.each do |error|
            li = error.full_message


    .field 
      = form.label :title
      = form.text_field :title, disabled: @product.published

    .field
      = form.label :description
      = form.rich_text_area :description, disabled: @product.published

    .field
      = form.label :price
      = form.text_field :price, disabled: @product.published
      
    .field
      = form.label :stock
      = form.number_field :stock
    .field
      = form.label :product_picture
      = form.file_field :product_picture, disabled: @product.published
    .btn-group-toggle.d-flex data-toggle="buttons"
      - Category.all.each do |category|
        = hidden_field_tag "product[category_ids][]", nil
        = label_tag dom_id(category), category.name, class: "category-label btn btn-secondary"
          = check_box_tag "product[category_ids][]", category.id, @product.categories.include?(category), id: dom_id(category), disabled: @product.published
          = category.name
        br

    .custom-control.custom-switch
      = form.check_box :published, class: "custom-control-input", id: "published"
      label.custom-control-label for="published" Published: 
    .custom-control.custom-switch
      = form.check_box :on_sale, class: "custom-control-input", id: "on_sale"
      label.custom-control-label for="on_sale" On sale: 
    .actions
      = form.submit

script type="text/javascript"
  | $(".trix-button-group--file-tools").remove();
  | $('input[checked="checked"]').parent().toggleClass("active");
  | $('.btn-group-toggle .btn').on("click", function(){
      $(this).toggleClass("focus");
  | })
